---
- name: Install Linux packages in WSL
  hosts: localhost
  become: true
  tasks:
    - name: Check if WSL is installed
      ansible.builtin.win_command:
      register: wsl_status
      ignore_errors: yes
      changed_when: false
      when: ansible_facts['os_family'] == 'Windows'

    - name: Fail if WSL is not installed
      ansible.builtin.fail:
        msg: "WSL is not installed"
      when: wsl_status != 0 and ansible_facts['os_family'] == 'Windows'

    - name: Install CLI utils (WSL)
      ansible.builtin.package: |
        wsl sudo apt update && sudo apt install -y {{ item }}
      loop:
        - wget
        - curl
        - nano
        - fzf
        - jq
        - git
        - build-essential
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install zsh in WSL
      ansible.builtin.shell: |
        wsl sudo apt-get update && wsl sudo apt-get install -y zsh
      when: ansible_facts['os_family'] == 'Debian'
    
    - name: Check if .zshrc file exists in WSL
      ansible.builtin.shell: |
        wsl test -f "{{ ansible_env.HOME }}/.zshrc" && echo "exists" || echo "not_exists"
      register: zshrc_stat
      changed_when: false
      failed_when: false

    - name: Create .zshrc file if it doesn't exist in WSL
      ansible.builtin.shell: |
        wsl touch "{{ ansible_env.HOME }}/.zshrc"
      when: zshrc_stat.stdout == "not_exists"

    - name: Copy .zshrc file to the local directory in WSL
      ansible.builtin.copy:
        src: ./files/.zshrc
        dest: "{{ ansible_env.HOME }}/.zshrc"
      when: zshrc_stat.stdout == "not_exists"

    - name: Install homebrew in WSL
      ansible.builtin.shell: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      creates: "/home/linuxbrew/.linuxbrew/bin/brew"
